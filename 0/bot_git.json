{"dependencies":[{"uri":"file:///usr/local/Cellar/dart-editor/21604/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"file:///usr/local/Cellar/dart-editor/21604/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/bot_git.dart","id":"bot_git","children":[{"returnType":{"refId":"void","name":"void"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"_metaRequireArgumentNotNullOrEmpty","isPrivate":true,"id":"_metaRequireArgumentNotNullOrEmpty1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"argName","id":"argName","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"requireArgumentValidSha1","id":"requireArgumentValidSha12()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"argName","id":"argName","kind":"param"}],"line":"3","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nA method that populates a [TempDir] asynchronously.\n","uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git_dir.dart","name":"PopulateTempDir","id":"PopulateTempDir","children":[{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"name":"dir","id":"dir","kind":"param"}],"line":"526","kind":"typedef"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git_dir.dart","name":"_TempDirs","isPrivate":true,"id":"_TempDirs","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"515","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"dispose","id":"dispose0()","line":"517","kind":"method"},{"ref":{"refId":"bot_git/GitDir","name":"GitDir"},"isFinal":true,"name":"gitDir","id":"gitDir","line":"509","kind":"variable"},{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"isFinal":true,"name":"gitHostDir","id":"gitHostDir","line":"510","kind":"variable"},{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"isFinal":true,"name":"gitWorkTreeDir","id":"gitWorkTreeDir","line":"511","kind":"variable"},{"name":"_TempDirs","id":"_TempDirs3()","children":[{"initializedField":{"refId":"bot_git/_TempDirs/gitDir","name":"gitDir"},"ref":{"refId":"bot_git/GitDir","name":"GitDir"},"name":"gitDir","id":"gitDir","kind":"param"},{"initializedField":{"refId":"bot_git/_TempDirs/gitHostDir","name":"gitHostDir"},"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"name":"gitHostDir","id":"gitHostDir","kind":"param"},{"initializedField":{"refId":"bot_git/_TempDirs/gitWorkTreeDir","name":"gitWorkTreeDir"},"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"name":"gitWorkTreeDir","id":"gitWorkTreeDir","kind":"param"}],"line":"513","kind":"constructor"}],"line":"508","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git_dir.dart","name":"GitDir","id":"GitDir","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"name":"getCommitCount","id":"getCommitCount1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'HEAD'","name":"branchName","id":"branchName","kind":"param"}],"line":"15","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/Commit","name":"Commit"}],"name":"Future"},"comment":"\n[rev] should probably be a sha1 to a commit.\nBut GIT lets you do other things.\nSee http://git-scm.com/docs/gitrevisions.html\n","name":"getCommit","id":"getCommit1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"rev","id":"rev","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Map"}],"name":"Future"},"name":"getCommits","id":"getCommits1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'HEAD'","name":"branchName","id":"branchName","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"}],"name":"Future"},"name":"getBranchNames","id":"getBranchNames0()","line":"39","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"Future"},"name":"getBranchReference","id":"getBranchReference1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"branchName","id":"branchName","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"List"}],"name":"Future"},"name":"getBranchReferences","id":"getBranchReferences0()","line":"63","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/Tag","name":"Tag"}],"name":"List"}],"name":"Future"},"name":"getTags","id":"getTags0()","line":"73","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/CommitReference","name":"CommitReference"}],"name":"List"}],"name":"Future"},"name":"showRef","id":"showRef2()","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"heads","id":"heads","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"tags","id":"tags","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"Future"},"name":"getCurrentBranch","id":"getCurrentBranch0()","line":"113","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/TreeEntry","name":"TreeEntry"}],"name":"List"}],"name":"Future"},"name":"lsTree","id":"lsTree3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"treeish","id":"treeish","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"subTreesOnly","id":"subTreesOnly","line":"124","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","name":"path","id":"path","line":"124","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","name":"createOrUpdateBranch","id":"createOrUpdateBranch3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"branchName","id":"branchName","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"treeSha","id":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"commitMessage","id":"commitMessage","line":"148","kind":"param"}],"line":"147","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","name":"_updateBranch","isPrivate":true,"id":"_updateBranch3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"targetBranchSha","id":"targetBranchSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"treeSha","id":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"commitMessage","id":"commitMessage","kind":"param"}],"line":"179","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nReturns the `SHA1` for the new commit.\n\nSee [git-commit-tree](http://git-scm.com/docs/git-commit-tree)\n","name":"commitTree","id":"commitTree3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"treeSha","id":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"commitMessage","id":"commitMessage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isOptional":true,"name":"parentCommitShas","id":"parentCommitShas","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Future"},"comment":"\nGiven a list of [paths], write those files to the object store\nand return a [Map] where the key is the input path and the value is\nthe SHA of the newly written object.\n","name":"writeObjects","id":"writeObjects1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"paths","id":"paths","kind":"param"}],"line":"226","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.io/ProcessResult","name":"ProcessResult"}],"name":"Future"},"name":"runCommand","id":"runCommand2()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"name":"args","id":"args","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"throwOnError","id":"throwOnError","kind":"param"}],"line":"243","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"name":"isWorkingTreeClean","id":"isWorkingTreeClean0()","line":"261","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/Commit","name":"Commit"}],"name":"Future"},"comment":"\nIf the content provided matches the content in the specificed [branchName], then\n`null` is returned.\n\nIf no content is added to the directory, an [Error] is thrown.\n","name":"populateBranch","id":"populateBranch3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"branchName","id":"branchName","kind":"param"},{"ref":{"refId":"bot_git/PopulateTempDir","name":"PopulateTempDir"},"name":"populator","id":"populator","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"commitMessage","id":"commitMessage","kind":"param"}],"line":"275","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/_TempDirs","name":"_TempDirs"}],"name":"Future"},"name":"_getTempDirPairForNewBranch","isPrivate":true,"id":"_getTempDirPairForNewBranch1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"newBranchName","id":"newBranchName","kind":"param"}],"line":"344","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/_TempDirs","name":"_TempDirs"}],"name":"Future"},"name":"_getTempDirPair","isPrivate":true,"id":"_getTempDirPair1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"existingBranchName","id":"existingBranchName","kind":"param"}],"line":"385","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"isStatic":true,"name":"isGitDir","id":"isGitDir1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"path","id":"path","kind":"param"}],"line":"427","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"comment":"\n[allowContent] if true, doesn't check to see if the directory is empty\n\nWill fail if the source is a git directory (either at the root or a sub directory)\n","name":"init","id":"init2()","children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"name":"source","id":"source","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"allowContent","id":"allowContent","kind":"param"}],"line":"444","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"name":"fromExisting","id":"fromExisting1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"gitDirRoot","id":"gitDirRoot","kind":"param"}],"line":"461","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"name":"_init","isPrivate":true,"id":"_init1()","children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"name":"source","id":"source","kind":"param"}],"line":"477","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"isStatic":true,"name":"_isGitDir","isPrivate":true,"id":"_isGitDir1()","children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"name":"dir","id":"dir","kind":"param"}],"line":"494","kind":"method"},{"ref":{"refId":"dart.io/Path","name":"Path"},"name":"path","id":"path","line":"13","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"_processWorkingDir","isPrivate":true,"id":"_processWorkingDir","line":"425","kind":"property"},{"isStatic":true,"name":"_workTreeArg","isPrivate":true,"id":"_workTreeArg","line":"4","kind":"variable"},{"isStatic":true,"name":"_gitDirArg","isPrivate":true,"id":"_gitDirArg","line":"5","kind":"variable"},{"ref":{"refId":"dart.core/RegExp","name":"RegExp"},"isFinal":true,"isStatic":true,"name":"_shaRegExp","isPrivate":true,"id":"_shaRegExp","line":"6","kind":"variable"},{"ref":{"refId":"dart.io/Path","name":"Path"},"isFinal":true,"name":"_path","isPrivate":true,"id":"_path","line":"8","kind":"variable"},{"ref":{"refId":"dart.io/Path","name":"Path"},"isFinal":true,"name":"_gitWorkTree","isPrivate":true,"id":"_gitWorkTree","line":"9","kind":"variable"},{"name":"GitDir._raw","isPrivate":true,"id":"GitDir._raw2()","children":[{"initializedField":{"refId":"bot_git/GitDir/_path","name":"_path"},"ref":{"refId":"dart.io/Path","name":"Path"},"name":"_path","isPrivate":true,"id":"_path","kind":"param"},{"initializedField":{"refId":"bot_git/GitDir/_gitWorkTree","name":"_gitWorkTree"},"ref":{"refId":"dart.io/Path","name":"Path"},"isOptional":true,"defaultValue":"null","name":"_gitWorkTree","isPrivate":true,"id":"_gitWorkTree","kind":"param"}],"line":"11","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"TreeEntry","id":"TreeEntry","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"309","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"bot_git/TreeEntry","name":"TreeEntry"}],"name":"List"},"isStatic":true,"name":"fromLsTreeOutput","id":"fromLsTreeOutput1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"output","id":"output","kind":"param"}],"line":"311","kind":"method"},{"isFinal":true,"isStatic":true,"name":"_lsTreeLine","isPrivate":true,"id":"_lsTreeLine","line":"272","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"_lsTreeRegEx","isPrivate":true,"id":"_lsTreeRegEx","line":"276","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"\nAll numbers.\n\nSee this this [post on stackoverflow](http://stackoverflow.com/questions/737673/how-to-read-the-mode-field-of-git-ls-trees-output)\n","name":"mode","id":"mode","line":"283","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","line":"286","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"sha","id":"sha","line":"287","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","line":"288","kind":"variable"},{"name":"TreeEntry","id":"TreeEntry4()","children":[{"initializedField":{"refId":"bot_git/TreeEntry/mode","name":"mode"},"ref":{"refId":"dart.core/String","name":"String"},"name":"mode","id":"mode","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/type","name":"type"},"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/sha","name":"sha"},"ref":{"refId":"dart.core/String","name":"String"},"name":"sha","id":"sha","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/name","name":"name"},"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"}],"line":"290","kind":"constructor"},{"name":"TreeEntry.fromLsTree","id":"TreeEntry.fromLsTree1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"302","kind":"constructor"}],"line":"271","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"Commit","id":"Commit","children":[{"returnType":{"refId":"bot_git/Commit","name":"Commit"},"isStatic":true,"name":"parse","id":"parse1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"content","id":"content","kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Map"},"isStatic":true,"name":"parseRawRevList","id":"parseRawRevList1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"content","id":"content","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"bot/Tuple","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Tuple"},"isStatic":true,"name":"_parse","isPrivate":true,"id":"_parse2()","children":[{"ref":{"refId":"bot/StringLineReader","name":"StringLineReader"},"name":"slr","id":"slr","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isRevParse","id":"isRevParse","kind":"param"}],"line":"207","kind":"method"},{"isFinal":true,"isStatic":true,"name":"_headerRegExp","isPrivate":true,"id":"_headerRegExp","line":"165","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"treeSha","id":"treeSha","line":"167","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"author","id":"author","line":"168","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"committer","id":"committer","line":"169","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"message","id":"message","line":"170","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"content","id":"content","line":"171","kind":"variable"},{"ref":{"refId":"bot/ReadOnlyCollection","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ReadOnlyCollection"},"isFinal":true,"name":"parents","id":"parents","line":"172","kind":"variable"},{"name":"Commit._internal","isPrivate":true,"id":"Commit._internal6()","children":[{"initializedField":{"refId":"bot_git/Commit/treeSha","name":"treeSha"},"ref":{"refId":"dart.core/String","name":"String"},"name":"treeSha","id":"treeSha","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/author","name":"author"},"ref":{"refId":"dart.core/String","name":"String"},"name":"author","id":"author","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/committer","name":"committer"},"ref":{"refId":"dart.core/String","name":"String"},"name":"committer","id":"committer","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/content","name":"content"},"ref":{"refId":"dart.core/String","name":"String"},"name":"content","id":"content","line":"175","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"name":"parents","id":"parents","line":"175","kind":"param"}],"line":"174","kind":"constructor"}],"line":"164","kind":"class"},{"superclass":{"refId":"bot_git/CommitReference","name":"CommitReference"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"BranchReference","id":"BranchReference","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"160","kind":"method"},{"isStatic":true,"name":"_localBranchPrefix","isPrivate":true,"id":"_localBranchPrefix","line":"145","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"branchName","id":"branchName","line":"147","kind":"variable"},{"name":"BranchReference","id":"BranchReference2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sha","id":"sha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"reference","id":"reference","kind":"param"}],"line":"149","kind":"constructor"},{"name":"BranchReference._internal","isPrivate":true,"id":"BranchReference._internal3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"sha","id":"sha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"reference","id":"reference","kind":"param"},{"initializedField":{"refId":"bot_git/BranchReference/branchName","name":"branchName"},"ref":{"refId":"dart.core/String","name":"String"},"name":"branchName","id":"branchName","kind":"param"}],"line":"157","kind":"constructor"}],"line":"144","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nRepresents the output from `git show-ref`\n","uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"CommitReference","id":"CommitReference","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"bot_git/CommitReference","name":"CommitReference"}],"name":"List"},"isStatic":true,"name":"fromShowRefOutput","id":"fromShowRefOutput1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"input","id":"input","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"bot_git/BranchReference","name":"BranchReference"},"name":"toBranchReference","id":"toBranchReference0()","line":"137","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"140","kind":"method"},{"ref":{"refId":"dart.core/RegExp","name":"RegExp"},"isFinal":true,"isStatic":true,"name":"_lsRemoteRegExp","isPrivate":true,"id":"_lsRemoteRegExp","line":"107","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"sha","id":"sha","line":"109","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"reference","id":"reference","line":"110","kind":"variable"},{"name":"CommitReference","id":"CommitReference2()","children":[{"initializedField":{"refId":"bot_git/CommitReference/sha","name":"sha"},"ref":{"refId":"dart.core/String","name":"String"},"name":"sha","id":"sha","kind":"param"},{"initializedField":{"refId":"bot_git/CommitReference/reference","name":"reference"},"ref":{"refId":"dart.core/String","name":"String"},"name":"reference","id":"reference","kind":"param"}],"line":"112","kind":"constructor"}],"line":"106","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"Tag","id":"Tag","children":[{"returnType":{"refId":"bot_git/Tag","name":"Tag"},"isStatic":true,"name":"parseCatFile","id":"parseCatFile1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"content","id":"content","kind":"param"}],"line":"75","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"objectSha","id":"objectSha","line":"63","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"type","id":"type","line":"64","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"tag","id":"tag","line":"65","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"tagger","id":"tagger","line":"66","kind":"variable"},{"name":"Tag._internal","isPrivate":true,"id":"Tag._internal4()","children":[{"initializedField":{"refId":"bot_git/Tag/objectSha","name":"objectSha"},"ref":{"refId":"dart.core/String","name":"String"},"name":"objectSha","id":"objectSha","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/type","name":"type"},"ref":{"refId":"dart.core/String","name":"String"},"name":"type","id":"type","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/tag","name":"tag"},"ref":{"refId":"dart.core/String","name":"String"},"name":"tag","id":"tag","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/tagger","name":"tagger"},"ref":{"refId":"dart.core/String","name":"String"},"name":"tagger","id":"tagger","kind":"param"}],"line":"68","kind":"constructor"}],"line":"62","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///Users/kevin/source/github/bot_io.dart/lib/src/bot_git/git.dart","name":"Git","id":"Git","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"name":"isValidSha","id":"isValidSha1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.io/ProcessResult","name":"ProcessResult"}],"name":"Future"},"isStatic":true,"name":"runGit","id":"runGit3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"args","id":"args","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","name":"throwOnError","id":"throwOnError","line":"28","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"processWorkingDir","id":"processWorkingDir","line":"28","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"_throwIfProcessFailed","isPrivate":true,"id":"_throwIfProcessFailed3()","children":[{"ref":{"refId":"dart.io/ProcessResult","name":"ProcessResult"},"name":"pr","id":"pr","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"process","id":"process","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"args","id":"args","kind":"param"}],"line":"45","kind":"method"},{"isStatic":true,"name":"_shaRegexPattern","isPrivate":true,"id":"_shaRegexPattern","line":"20","kind":"variable"},{"isFinal":true,"isStatic":true,"name":"_shaRegEx","isPrivate":true,"id":"_shaRegEx","line":"21","kind":"variable"}],"line":"19","kind":"class"}],"line":"1","kind":"library"}